/***********************************************************************
 * @file	initVolume.comp
 * @author	jjyou
 * @date	2024-4-6
 * @brief	This file implements the compute shader to initialize the
 *			TSDF volume.
***********************************************************************/

#version 450

layout (local_size_x = 32, local_size_y = 32) in;

/** @brief	Input TSDF volume.
  * 
  * A storage buffer containing all information about the TSDF volume.
  */
layout(set = 0, binding = 0) buffer TSDFVolume {
	uvec3 resolution;
	float size;
	vec3 corner;
	float truncationDistance;
	ivec2 data[];
} tsdfVolume;

#include "tsdfVolumeCommon.h"

void main() {
	if (gl_GlobalInvocationID.x >= tsdfVolume.resolution.x || gl_GlobalInvocationID.y >= tsdfVolume.resolution.y)
		return;
	uint baseVoxelIndex = (gl_GlobalInvocationID.x * tsdfVolume.resolution.y + gl_GlobalInvocationID.y) * tsdfVolume.resolution.z;
	for (uint z = 0; z < tsdfVolume.resolution.z; ++z) {
		ivec2 data;
		packVoxel(0.0, 0, data.x);
		packColor(vec4(0.0, 0.0, 0.0, 1.0), data.y);
		tsdfVolume.data[baseVoxelIndex + z] = data;
	}
	return;
}